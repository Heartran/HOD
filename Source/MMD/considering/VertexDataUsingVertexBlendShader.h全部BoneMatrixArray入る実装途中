#ifndef __VERTEXDATA_USING_VERTEX_BLEND_SHADER_H__
#define __VERTEXDATA_USING_VERTEX_BLEND_SHADER_H__
#include <d3dx9.h>
#include <vector>
#include <map>
#include "Model.h"
#include "MMDMacro.h"

class CFace;
class CBone;

class VertexDataUsingVertexBlendShader {
public:
	VertexDataUsingVertexBlendShader();
	~VertexDataUsingVertexBlendShader();
	const char* load(const char *pData);
	void draw( 
		const std::vector<CBone*> &bones,
		const std::vector<CModel::Subset*> &subsets,
		const std::vector<CModel::Material*> &materials );

	void updateFaceVertex(const std::vector<CFace*> &faces);
private:
	DISALLOW_COPY_AND_ASSIGN(VertexDataUsingVertexBlendShader);

	IDirect3DVertexBuffer9* originalVertexBuffer_;
	unsigned long vertexCount_;
	IDirect3DIndexBuffer9* indexBuffer_;
	unsigned long numIndices_;
};


#endif//__VERTEXDATA_USING_VERTEX_BLEND_SHADER_H__