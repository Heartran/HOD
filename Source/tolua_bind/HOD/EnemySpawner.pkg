$#include"HOD/EnemySpawner.h"
class btTransform;
namespace GameObject {
	class Enemy;
	typedef std::shared_ptr<Enemy> EnemySharedPtr;
}

namespace XmlLoader {
	namespace GameObject {
		class Enemy;
		typedef std::shared_ptr<Enemy> EnemySharedPtr;
	}
}

namespace HOD {

class EnemySpawner {
public:
	EnemySpawner();
	~EnemySpawner();

	void update(float elapsedTime);

	void loadEnemy(const std::string &filename);

	bool isReady();

	//敵の出現を予約する
	//ここで敵ポインタを返すがaddToWorldしないこと
	//この予約時間前にaddToWorldした場合予約時間にassertさせる
	//位置変化とかはさせない
	//enemyNameが見つからなかったら空っぽのスマートポインターを返す
	void reserve(const std::string &enemyName, float spawnTime, const btTransform& trans);

	void registerEnemy(XmlLoader::GameObject::EnemySharedPtr enemy);

};


}

